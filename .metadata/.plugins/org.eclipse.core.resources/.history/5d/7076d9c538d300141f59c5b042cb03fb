import org.apache.spark.SparkContext
import org.apache.spark.SparkContext._
import org.apache.spark.SparkConf

/*
 * Ratings: UserID::MovieID::Rating::Timestamp
 * Movies: MovieID::Title::Genres
 * Users: UserID::Gender::Age::Occupation::Zip-code
 * 
 * 
 * 
 */


object Mov {
  def main (args: Array[String]){
    val path = "/home/kati/foo/BDF/" // Path to files
    val conf = new SparkConf().setAppName("Movies").setMaster("local[2]")
    val sc = new SparkContext(conf)
    
    case class Rating (userid: Int, movieid: Int, rating: Int, timestamp: Int)
    case class Movie (movieid: Int, title: String, genre: String)
    case class User (userid: Int, Gender: String, age: Int, occupation: Int, zip: Int)
    
    val format = new java.text.SimpleDateFormat("yyyy-MM-dd")
 
    case class Register (d: java.util.Date, uuid: String, cust_id: String, lat: Float, lng: Float)
    case class Click (d: java.util.Date, uuid: String, landing_page: Int)
 
    val reg = sc.textFile("reg.tsv").map(_.split("\t")).map(
      r => (r(1), Register(format.parse(r(0)), r(1), r(2), r(3).toFloat, r(4).toFloat))
      )
 
    val clk = sc.textFile("clk.tsv").map(_.split("\t")).map(
      c => (c(1), Click(format.parse(c(0)), c(1), c(2).trim.toInt))
      )
 
    reg.join(clk).take(2)


  }

}